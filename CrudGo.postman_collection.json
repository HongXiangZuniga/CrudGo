{
	"info": {
		"_postman_id": "2764905e-5885-4393-bd00-683b259856b9",
		"name": "CrudGo",
		"description": "# ðŸš€ CrudGo\n\nThis Postman collection provides a set of endpoints to interact with the Crud Go example API. The API generates fake user data for testing and development purposes.\n\n## Getting Started\n\nTo use this collection, you'll need to have Postman installed. If you don't have Postman installed, you can download it [here](https://null).\n\n### Importing the Collection\n\n1. Open Postman.\n    \n2. Click on the **Import** button in the top left corner.\n    \n3. Drag and drop the downloaded JSON file or click on **Upload Files** and select the file.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5830269"
	},
	"item": [
		{
			"name": "All User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{api_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "User by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{api_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/user/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"{{id}}"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "User by field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{api_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/user/search/{{field}}/{{value}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"search",
						"{{field}}",
						"{{value}}"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{api_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/user/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"{{id}}"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{api_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Hong Xiang\",\n    \"email\": \"hongxiang17@gmail.com\",\n    \"age\": 29,\n    \"country\": \"Chile\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "localhost:4000"
		},
		{
			"key": "api_token",
			"value": "1234"
		},
		{
			"key": "id",
			"value": "22",
			"type": "string"
		},
		{
			"key": "field",
			"value": "name",
			"type": "string"
		},
		{
			"key": "value",
			"value": "Hong Xiang",
			"type": "string"
		}
	]
}